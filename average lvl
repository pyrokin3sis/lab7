#include <iostream>
 
 using namespace std;

/*Вариант 10 средний уровень*
Создать стек целочисленных значений, для реализации используя
односвязные списки. Реализовать операции добавления (push) и удале-
ния (pop) элемента из стека. Добавьте в стек числа 1, 2, 3, 4, 5 и распеча-
тайте содержимое стека. Удалите 3 элемента из стека, и распечатайте
содержимое стека еще раз. Найдите сумму элементов стека. */


 
struct node 
{
    int data;
    node* next;
};
 
class Stack 
{
 
    private:
 
        node* head;
 
    public:
 
        Stack() 
{ 
            head = NULL;
        }
 
        ~Stack() 
{ 
            while (head != NULL) 
{
                node* temp = head->next;
                delete head;
                head = temp;
            }
        }
 
    void push(int data) 
{                                                                      //Функция добавления элемента в стек
        node* temp = new node;
        temp->data = data;
        temp->next = head;
        head = temp;
    }
 
    void pop() 
{                                                        //Функция удаления элемента из вершины стека
        if (head == NULL) 
{
            cout << "Can't delete, couse the stack is empty!\n";
        } 
else 
{
            node* temp = head;
            head = head->next;
            delete temp;
        }
    }
 
    int sum() 
{                                                                       //Функция поиска суммы элементов стека
        node* temp = head;
        int sum = 0;
        while (temp != NULL) 
{
            sum += temp->data;
            temp = temp->next;
        }
        return sum;
    }
 
    void print() 
{                                                                        //Функция вывода списка на экран
        bool flag = false;
        node* temp = head;
        cout << "Now the stack is:\n";
        while (temp != NULL) 
{
            cout << temp->data << " ";
            temp = temp->next;
            flag = true;
        }
        if (!flag) 
{
            cout << "The stack is empty!\n";
        }
        cout << "\n";
    }
};
 
int main() 
{
    Stack st;
    st.push(1);
    st.push(2);
    st.push(3);
    st.push(4);
    st.push(5);
    st.print();
    st.pop();
    st.pop();
    st.pop();
    st.print();
    cout << "Sum of stack elements: " << st.sum() << "\n";
    return 0;
}
